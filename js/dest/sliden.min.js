(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var Sliden = require('./sliden');

console.log(Sliden);

},{"./sliden":4}],2:[function(require,module,exports){
'use strict';

function DOM(options) {
  this.subscribers = [];
  this.$el = $(options.el);
  this.$nextBtn = $(options.nextBtn);
  this.$prevBtn = $(options.prevBtn);

  this._bindEvents();
}

DOM.prototype.notify = function (message) {
  this.subscribers.forEach(function (subscriber) {
    subscriber.recieve(message);
  });
};

DOM.prototype._add = function (subscriber) {
  this.subscribers.push(subscriber);
};

DOM.prototype._bindEvents = function () {

  var eventHandler = function (message) {
    this.notify(message);
  };

  this.$nextBtn.on('click', eventHandler.bind(this, 'next'));
  this.$prevBtn.on('click', eventHandler.bind(this, 'prev'));
};

module.exports = DOM;

},{}],3:[function(require,module,exports){
'use strict';

function Iterator (storage) {
  this.storage = storage;
  this.pointer = 1;
}

Iterator.prototype.next = function () {
  if (this.pointer >= this.size()) {
    this.pointer = 0;
  }

  return this.storage[this.pointer++];
};

Iterator.prototype.size = function () {
  return this.storage.length;
};

Iterator.prototype.reset = function (direction) {
  this.pointer = direction === 0 ? 0 : this.size() - 1;

  return this;
};

Iterator.prototype.goTo = function (idx) {

  if (idx >= this.size()) {
    throw new Error('Provided index is out of range');
  }

  return this.storage[idx];
};

module.exports = Iterator;

},{}],4:[function(require,module,exports){
'use strict';

var Iterator = require('./iterator'),
  DOM = require('./dom');

function Sliden(options) {
  var dom = new DOM(options.selectors);

  this.iterator = new Iterator(options.storage);

  this.subscribe(dom);
}

Sliden.prototype.subscribe = function (channel) {
  channel._add(this);
};

Sliden.prototype.recieve = function (message) {
  if (message === 'next') {
    this.getNextItem();
  } else {
    this.getPrevItem();
  }
};

Sliden.prototype.getNextItem = function () {
  return this.iterator.next();
};

Sliden.prototype.getPrevItem = function () {
  return this.iterator.prev();
};

module.exports = Sliden;

},{"./dom":2,"./iterator":3}]},{},[1]);

//# sourceMappingURL=sliden.min.js.map
